%!PS-Adobe-2.0
%%Title: nonu57221AB.eps
%%Creator: gnuplot 5.4 patchlevel 1
%%CreationDate: Thu Apr 15 16:31:24 2021
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Level3 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -80 def
/dl1 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 554 50 lineto 554 770 lineto 50 770 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 5.2 (Dec 2017)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Classic Line colors (version 5.0)
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default dash patterns (version 5.0)
/LTB {BL [] LCb DL} def
/LTw {PL [] 1 setgray} def
/LTb {PL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [2 dl1 3 dl2] LC1 DL} def
/LT2 {PL [1 dl1 1.5 dl2] LC2 DL} def
/LT3 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC3 DL} def
/LT4 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [4 dl1 2 dl2] LC5 DL} def
/LT6 {PL [1.5 dl1 1.5 dl2 1.5 dl1 1.5 dl2 1.5 dl1 6 dl2] LC6 DL} def
/LT7 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC8 DL} def
/SL {[] 0 setdash} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto closepath gsave fill grestore stroke} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
dup 2 lt
	{/InterpretLevel1 true def
	 /InterpretLevel3 false def}
	{/InterpretLevel1 Level1 def
	 2 gt
	    {/InterpretLevel3 Level3 def}
	    {/InterpretLevel3 false def}
	 ifelse }
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
/Metrics {ExtendTextBox Gswidth} def
/Lwidth {currentpoint stroke M 0 vshift R Metrics} def
/Rwidth {currentpoint stroke M dup stringwidth pop neg vshift R Metrics} def
/Cwidth {currentpoint stroke M dup stringwidth pop -2 div vshift R Metrics} def
/GLwidth {currentpoint stroke M 0 vshift R {ExtendTextBox} forall} def
/GRwidth {currentpoint stroke M dup Gwidth vshift R {ExtendTextBox} forall} def
/GCwidth {currentpoint stroke M dup Gwidth 2 div vshift R {ExtendTextBox} forall} def
/GLwidth2 {0 Gwidth AddGlyphWidth} def
/GRwidth2 {Gwidth -1 mul 0 AddGlyphWidth} def
/GCwidth2 {Gwidth 2 div dup -1 mul AddGlyphWidth} def
/AddGlyphWidth { dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
                 dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse } def
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {textshow} {Metrics pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get Gswidth pop -2 div
     dup 0 R} {dup 6 get Gswidth pop -2 div 0 R 6 get
     textshow 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (nonu57221AB.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 5.4 patchlevel 1)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Thu Apr 15 16:31:24 2021)
  /DOCINFO pdfmark
end
} ifelse
%
% Support for boxed text - Ethan A Merritt Sep 2016
%
/InitTextBox { userdict /TBy2 3 -1 roll put userdict /TBx2 3 -1 roll put
           userdict /TBy1 3 -1 roll put userdict /TBx1 3 -1 roll put
	   /Boxing true def } def
/ExtendTextBox { dup type /stringtype eq
    { Boxing { gsave dup false charpath pathbbox
      dup TBy2 gt {userdict /TBy2 3 -1 roll put} {pop} ifelse
      dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
      dup TBy1 lt {userdict /TBy1 3 -1 roll put} {pop} ifelse
      dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse
      grestore } if }
    {} ifelse} def
/PopTextBox { newpath TBx1 TBxmargin sub TBy1 TBymargin sub M
               TBx1 TBxmargin sub TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy1 TBymargin sub L closepath } def
/DrawTextBox { PopTextBox stroke /Boxing false def} def
/FillTextBox { gsave PopTextBox fill grestore /Boxing false def} def
0 0 0 0 InitTextBox
/TBxmargin 20 def
/TBymargin 20 def
/Boxing false def
/textshow { ExtendTextBox Gshow } def
%
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 240 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {gsave BackgroundColor C clippath fill grestore} if
5.000 UL
LTb
LCb setrgbcolor
936 480 M
63 0 V
5768 0 R
-63 0 V
stroke
792 480 M
[ [(Helvetica) 240.0 0.0 true true 0 (10)]
[(Helvetica) 192.0 120.0 true true 0 (-12)]
] -104.0 MRshow
/Helvetica findfont 240 scalefont setfont
/vshift -80 def
5.000 UL
LTb
LCb setrgbcolor
936 916 M
31 0 V
5800 0 R
-31 0 V
936 1030 M
31 0 V
5800 0 R
-31 0 V
936 1098 M
31 0 V
5800 0 R
-31 0 V
936 1147 M
31 0 V
5800 0 R
-31 0 V
936 1186 M
31 0 V
5800 0 R
-31 0 V
936 1217 M
31 0 V
5800 0 R
-31 0 V
936 1244 M
31 0 V
5800 0 R
-31 0 V
936 1267 M
31 0 V
5800 0 R
-31 0 V
936 1287 M
63 0 V
5768 0 R
-63 0 V
stroke
792 1287 M
[ [(Helvetica) 240.0 0.0 true true 0 (10)]
[(Helvetica) 192.0 120.0 true true 0 (-10)]
] -104.0 MRshow
/Helvetica findfont 240 scalefont setfont
5.000 UL
LTb
LCb setrgbcolor
936 1723 M
31 0 V
5800 0 R
-31 0 V
936 1837 M
31 0 V
5800 0 R
-31 0 V
936 1906 M
31 0 V
5800 0 R
-31 0 V
936 1955 M
31 0 V
5800 0 R
-31 0 V
936 1993 M
31 0 V
5800 0 R
-31 0 V
936 2025 M
31 0 V
5800 0 R
-31 0 V
936 2051 M
31 0 V
5800 0 R
-31 0 V
936 2074 M
31 0 V
5800 0 R
-31 0 V
936 2095 M
63 0 V
5768 0 R
-63 0 V
stroke
792 2095 M
[ [(Helvetica) 240.0 0.0 true true 0 (10)]
[(Helvetica) 192.0 120.0 true true 0 (-8)]
] -104.0 MRshow
/Helvetica findfont 240 scalefont setfont
5.000 UL
LTb
LCb setrgbcolor
936 2530 M
31 0 V
5800 0 R
-31 0 V
936 2644 M
31 0 V
5800 0 R
-31 0 V
936 2713 M
31 0 V
5800 0 R
-31 0 V
936 2762 M
31 0 V
5800 0 R
-31 0 V
936 2800 M
31 0 V
5800 0 R
-31 0 V
936 2832 M
31 0 V
5800 0 R
-31 0 V
936 2859 M
31 0 V
5800 0 R
-31 0 V
936 2882 M
31 0 V
5800 0 R
-31 0 V
936 2902 M
63 0 V
5768 0 R
-63 0 V
stroke
792 2902 M
[ [(Helvetica) 240.0 0.0 true true 0 (10)]
[(Helvetica) 192.0 120.0 true true 0 (-6)]
] -104.0 MRshow
/Helvetica findfont 240 scalefont setfont
5.000 UL
LTb
LCb setrgbcolor
936 3338 M
31 0 V
5800 0 R
-31 0 V
936 3452 M
31 0 V
5800 0 R
-31 0 V
936 3520 M
31 0 V
5800 0 R
-31 0 V
936 3569 M
31 0 V
5800 0 R
-31 0 V
936 3608 M
31 0 V
5800 0 R
-31 0 V
936 3639 M
31 0 V
5800 0 R
-31 0 V
936 3666 M
31 0 V
5800 0 R
-31 0 V
936 3689 M
31 0 V
5800 0 R
-31 0 V
936 3709 M
63 0 V
5768 0 R
-63 0 V
stroke
792 3709 M
[ [(Helvetica) 240.0 0.0 true true 0 (10)]
[(Helvetica) 192.0 120.0 true true 0 (-4)]
] -104.0 MRshow
/Helvetica findfont 240 scalefont setfont
5.000 UL
LTb
LCb setrgbcolor
936 4145 M
31 0 V
5800 0 R
-31 0 V
936 4259 M
31 0 V
5800 0 R
-31 0 V
936 4328 M
31 0 V
5800 0 R
-31 0 V
936 4377 M
31 0 V
5800 0 R
-31 0 V
936 4415 M
31 0 V
5800 0 R
-31 0 V
936 4447 M
31 0 V
5800 0 R
-31 0 V
936 4473 M
31 0 V
5800 0 R
-31 0 V
936 4496 M
31 0 V
5800 0 R
-31 0 V
936 4517 M
63 0 V
5768 0 R
-63 0 V
stroke
792 4517 M
[ [(Helvetica) 240.0 0.0 true true 0 (10)]
[(Helvetica) 192.0 120.0 true true 0 (-2)]
] -104.0 MRshow
/Helvetica findfont 240 scalefont setfont
5.000 UL
LTb
LCb setrgbcolor
936 480 M
0 63 V
0 4256 R
0 -63 V
stroke
936 240 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 0)]
] -80.0 MCshow
/Helvetica findfont 240 scalefont setfont
5.000 UL
LTb
LCb setrgbcolor
1769 480 M
0 63 V
0 4256 R
0 -63 V
stroke
1769 240 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 20)]
] -80.0 MCshow
/Helvetica findfont 240 scalefont setfont
5.000 UL
LTb
LCb setrgbcolor
2602 480 M
0 63 V
0 4256 R
0 -63 V
stroke
2602 240 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 40)]
] -80.0 MCshow
/Helvetica findfont 240 scalefont setfont
5.000 UL
LTb
LCb setrgbcolor
3435 480 M
0 63 V
0 4256 R
0 -63 V
stroke
3435 240 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 60)]
] -80.0 MCshow
/Helvetica findfont 240 scalefont setfont
5.000 UL
LTb
LCb setrgbcolor
4268 480 M
0 63 V
0 4256 R
0 -63 V
stroke
4268 240 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 80)]
] -80.0 MCshow
/Helvetica findfont 240 scalefont setfont
5.000 UL
LTb
LCb setrgbcolor
5101 480 M
0 63 V
0 4256 R
0 -63 V
stroke
5101 240 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 100)]
] -80.0 MCshow
/Helvetica findfont 240 scalefont setfont
5.000 UL
LTb
LCb setrgbcolor
5934 480 M
0 63 V
0 4256 R
0 -63 V
stroke
5934 240 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 120)]
] -80.0 MCshow
/Helvetica findfont 240 scalefont setfont
5.000 UL
LTb
LCb setrgbcolor
6767 480 M
0 63 V
0 4256 R
0 -63 V
stroke
6767 240 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 140)]
] -80.0 MCshow
/Helvetica findfont 240 scalefont setfont
5.000 UL
LTb
LCb setrgbcolor
5.000 UL
LTB
LCb setrgbcolor
936 4799 N
936 480 L
5831 0 V
0 4319 V
-5831 0 V
Z stroke
1.000 UP
5.000 UL
LTb
LCb setrgbcolor
% Begin plot #1
1.000 UP
5.000 UL
LTb
0.58 0.00 0.83 C
LCb setrgbcolor
4769 4676 M
[ [(Helvetica-Bold) 120.0 0.0 true true 0 (dirk57221)]
] -40.0 MRshow
/Helvetica findfont 240 scalefont setfont
1.000 UP
5.000 UL
LTb
0.58 0.00 0.83 C
978 1783 Pls
1103 2064 Pls
1686 607 Pls
1727 586 Pls
2852 604 Pls
2894 1072 Pls
2935 2256 Pls
2977 2195 Pls
3019 2495 Pls
3060 2459 Pls
3102 2562 Pls
3143 3460 Pls
3185 3444 Pls
3227 3398 Pls
3268 3509 Pls
3310 3481 Pls
3352 3373 Pls
3393 3288 Pls
3435 3308 Pls
3477 3348 Pls
3518 3561 Pls
3560 3699 Pls
3602 3647 Pls
3643 3702 Pls
3685 3645 Pls
3727 3649 Pls
3768 3536 Pls
3810 3758 Pls
3852 3620 Pls
3852 1765 Pls
3893 3758 Pls
3935 3758 Pls
3976 3733 Pls
4018 3705 Pls
4060 3829 Pls
4101 3793 Pls
4101 2047 Pls
4143 3925 Pls
4185 3989 Pls
4226 3907 Pls
4268 3746 Pls
4310 4026 Pls
4351 4076 Pls
4351 2565 Pls
4393 4135 Pls
4435 4154 Pls
4476 3888 Pls
4518 3808 Pls
4560 3992 Pls
4601 3988 Pls
4643 3875 Pls
4685 3892 Pls
4726 3782 Pls
4768 3689 Pls
4809 3597 Pls
4851 3445 Pls
4893 3706 Pls
4934 3658 Pls
4976 3741 Pls
5018 3612 Pls
5059 3661 Pls
5101 3631 Pls
5101 1491 Pls
5143 3569 Pls
5184 3571 Pls
5226 3594 Pls
5268 3568 Pls
5268 613 Pls
5309 3570 Pls
5351 3485 Pls
5393 3492 Pls
5434 3403 Pls
5476 3437 Pls
5518 3422 Pls
5518 1270 Pls
5559 3457 Pls
5601 3493 Pls
5642 3418 Pls
5684 3400 Pls
5726 3197 Pls
5767 3177 Pls
5809 3141 Pls
5851 3022 Pls
5892 2926 Pls
5934 2840 Pls
5976 2923 Pls
6017 2831 Pls
6017 802 Pls
6059 2844 Pls
6101 2725 Pls
6142 2874 Pls
6184 2925 Pls
6226 2953 Pls
6267 2858 Pls
6309 2746 Pls
6351 2545 Pls
6392 2122 Pls
6434 1633 Pls
6475 890 Pls
5016 4676 Pls
% End plot #1
% Begin plot #2
1.000 UP
5.000 UL
LTb
0.00 0.62 0.45 C
LCb setrgbcolor
6128 4676 M
[ [(Helvetica-Bold) 120.0 0.0 true true 0 (base57221old)]
] -40.0 MRshow
/Helvetica findfont 240 scalefont setfont
1.000 UP
5.000 UL
LTb
0.00 0.62 0.45 C
978 669 Crs
1103 3251 Crs
1228 759 Crs
1311 1486 Crs
1394 535 Crs
1436 807 Crs
1477 658 Crs
1519 1759 Crs
1561 1676 Crs
1602 1315 Crs
1686 1431 Crs
1727 1384 Crs
1769 1132 Crs
1852 958 Crs
1894 1123 Crs
1936 1026 Crs
1977 584 Crs
2019 1282 Crs
2061 951 Crs
2102 817 Crs
2144 811 Crs
2186 937 Crs
2227 673 Crs
2269 909 Crs
2310 827 Crs
2352 882 Crs
2394 585 Crs
2435 876 Crs
2477 625 Crs
2519 620 Crs
2602 591 Crs
2644 682 Crs
2685 928 Crs
2727 687 Crs
2769 888 Crs
2810 756 Crs
2852 732 Crs
2894 518 Crs
3143 852 Crs
3268 615 Crs
3352 735 Crs
3393 807 Crs
3435 1002 Crs
3477 1240 Crs
3518 1561 Crs
3560 1380 Crs
3602 1435 Crs
3643 1450 Crs
3685 1471 Crs
3727 1542 Crs
3768 1826 Crs
3810 1538 Crs
3852 1609 Crs
3893 1457 Crs
3935 1684 Crs
3976 2028 Crs
4018 2178 Crs
4060 2387 Crs
4101 3038 Crs
4143 3320 Crs
4185 3533 Crs
4226 3463 Crs
4268 3910 Crs
4310 3820 Crs
4351 3908 Crs
4393 3750 Crs
4435 3921 Crs
4476 3904 Crs
4518 4006 Crs
4560 4180 Crs
4601 4152 Crs
4643 3911 Crs
4685 3952 Crs
4726 3843 Crs
4768 3907 Crs
4809 3877 Crs
4851 3870 Crs
4893 3825 Crs
4934 3909 Crs
4976 3856 Crs
5018 3860 Crs
5059 3806 Crs
5101 3820 Crs
5143 3753 Crs
5184 3828 Crs
5226 3768 Crs
5268 3767 Crs
5309 3772 Crs
5351 3804 Crs
5393 3759 Crs
5434 3895 Crs
5476 3750 Crs
5518 3848 Crs
5559 3786 Crs
5601 3815 Crs
5642 3684 Crs
5684 3627 Crs
5726 3447 Crs
5767 3416 Crs
5809 3329 Crs
5851 3374 Crs
5892 3313 Crs
5934 3354 Crs
5976 3326 Crs
6017 3347 Crs
6059 3281 Crs
6101 3301 Crs
6142 3427 Crs
6184 3608 Crs
6226 3675 Crs
6267 3646 Crs
6309 3641 Crs
6351 3481 Crs
6392 3234 Crs
6434 2619 Crs
6475 1889 Crs
6517 1986 Crs
6559 1405 Crs
6600 803 Crs
6375 4676 Crs
% End plot #2
2.000 UL
LTb
LCb setrgbcolor
5.000 UL
LTB
LCb setrgbcolor
936 4799 N
936 480 L
5831 0 V
0 4319 V
-5831 0 V
Z stroke
1.000 UP
5.000 UL
LTb
LCb setrgbcolor
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica-Bold Helvetica
%%Pages: 1
